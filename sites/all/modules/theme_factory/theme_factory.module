<?php

function theme_factory_menu() {
  $items = array();
  $items['theme_factory/generate'] = array(
    'title' => t('Theme Factory'),
    'page callback' => '_theme_factory_get_form',
    'access arguments' => array('access content'),
    'description' => t('Theme Factory'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function _theme_factory_get_form() {
  return drupal_get_form('theme_factory_form');
}

function theme_factory_form($form, &$form_state) {
  $form['#attached']['css'] = array(
    drupal_get_path('module', 'theme_factory') . '/css/theme_factory.css',
  );
  $form['layout'] = array(
    '#type' => 'radios',
    '#title' => t('Type'),
    '#options' => array(
      "bcfhms-1" => t('<strong>Layout #1</strong>') . '<div id="layout1"><div class="box header"></div><div class="box masthead"></div><div class="box content"></div><div class="box sidebar"></div><div class="box footer"></div></div>' . t('<p class="layout-type")>Layout description #1.</p>'),
      "bcfhms-2" => t('<strong>Layout #2</strong>') . '<div id="layout2"><div class="box header"></div><div class="main-content"><div class="box masthead"></div><div class="box content"></div></div><div class="box sidebar"></div><div class="box footer"></div></div>' . t('<p class="layout-type")>Layout description #2.</p>'),
    ),
    '#required' => TRUE,
  );

  $form['theme'] = array(
    '#type' => 'textfield',
    '#title' => t('Theme Name'),
    '#size' => 60,
    '#maxlength' => 120,
    '#required' => TRUE,
  );

  $form['theme_description'] = array(
    '#type' => 'textarea',
    '#title' => t('Description'),
    '#rows' => 2,
    '#maxlength' => 140,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );
  return $form;
}

function theme_factory_form_submit($form_id, $form_values) {
  // Clear out output buffer to remove any garbage from tar output.
  $theme_name = $form_values['values']['theme'];
  $theme_description = $form_values['values']['theme_description'];
  $variation = $form_values['values']['layout'];
  list($layout, $variation_no) = explode("-", $variation);
  $ninesixty = drupal_get_path('theme', 'ninesixty');
  if (ob_get_level()) {
    ob_end_clean();
  }
  // tar file name
  $filename = $theme_name . ".tar";
  drupal_add_http_header('Content-type', 'application/x-tar');
  drupal_add_http_header('Content-Disposition', 'attachment; filename="' . $filename . '"');
  drupal_send_headers();

  // page.tpl.php
  $files = $theme_name . "/templates/page.tpl.php";
  $page_tpl = sprintf("%s/templates/page-%s.tpl.php", drupal_get_path('module', 'theme_factory'), $variation);
  $contents = file_get_contents($page_tpl);
  print _theme_factory_tar_create($files, $contents);
  unset($contents);

  // template.php
  $files = $theme_name . "/template.php";
  $contents = str_replace("<THEME>", $theme_name, file_get_contents($ninesixty . "/template.php"));
  print _theme_factory_tar_create($files, $contents);
  unset($contents);

  // info file.
  $files = sprintf("%s/%s.info", $theme_name, $theme_name);
  $info_file = sprintf("%s/infos/layout-%s.info", drupal_get_path('module', 'theme_factory'), $layout);
  $contents = str_replace(array("<THEME>", "<DESCRIPTION>"), array($theme_name, $theme_description), file_get_contents($info_file));
  print _theme_factory_tar_create($files, $contents);
  unset($contents);

  // styles dir
  $styles_path = $ninesixty . '/styles';
  foreach (@file_scan_directory($styles_path, '/.*/') as $file) {
    $filename = substr($file->uri, strlen($styles_path) + 1);
    $contents = file_get_contents($file->uri);
    $files = sprintf("%s/styles/%s", $theme_name, $filename);
    print _theme_factory_tar_create($files, $contents);
    unset($contents);
  }

  // TODO:README
  // TODO:LICENSE (?)

  print pack("a1024", "");
  exit;
}

/**
 * Tar creation function. Taken from features module.
 *
 * @param $name
 *   Filename of the file to be tarred.
 * @param $contents
 *   String contents of the file.
 *
 * @return
 *   A string of the tar file contents.
 */
function _theme_factory_tar_create($name, $contents) {
  $tar = '';
  $binary_data_first = pack("a100a8a8a8a12A12", $name, '100644 ', // File permissions
          '   765 ', // UID,
          '   765 ', // GID,
          sprintf("%11s ", decoct(strlen($contents))), // Filesize,
          sprintf("%11s", decoct(REQUEST_TIME)) // Creation time
  );
  $binary_data_last = pack("a1a100a6a2a32a32a8a8a155a12", '', '', '', '', '', '', '', '', '', '');

  $checksum = 0;
  for ($i = 0; $i < 148; $i++) {
    $checksum += ord(substr($binary_data_first, $i, 1));
  }
  for ($i = 148; $i < 156; $i++) {
    $checksum += ord(' ');
  }
  for ($i = 156, $j = 0; $i < 512; $i++, $j++) {
    $checksum += ord(substr($binary_data_last, $j, 1));
  }

  $tar .= $binary_data_first;
  $tar .= pack("a8", sprintf("%6s ", decoct($checksum)));
  $tar .= $binary_data_last;

  $buffer = str_split($contents, 512);
  foreach ($buffer as $item) {
    $tar .= pack("a512", $item);
  }
  return $tar;
}
